<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Чат на GitHub Pages</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }
        body {
            background-color: #f0f2f5;
            padding: 20px;
        }
        .chat-container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .chat-header {
            background: #28a745;
            color: white;
            padding: 15px;
            text-align: center;
        }
        #chat-messages {
            height: 500px;
            padding: 20px;
            overflow-y: auto;
            background: #e5ddd5;
        }
        .message {
            max-width: 70%;
            margin-bottom: 15px;
            padding: 10px 15px;
            border-radius: 18px;
            line-height: 1.4;
        }
        .message.received {
            background: white;
            margin-right: auto;
            border-top-left-radius: 5px;
        }
        .message.sent {
            background: #dcf8c6;
            margin-left: auto;
            border-top-right-radius: 5px;
        }
        .message-info {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }
        .chat-input {
            display: flex;
            padding: 15px;
            background: #f0f0f0;
            border-top: 1px solid #ddd;
        }
        #message-input {
            flex: 1;
            padding: 10px 15px;
            border: none;
            border-radius: 20px;
            outline: none;
        }
        #send-button {
            margin-left: 10px;
            padding: 10px 20px;
            background: #28a745;
            color: white;
            border: none;
            border-radius: 20px;
            cursor: pointer;
        }
        .login-form {
            text-align: center;
            padding: 40px 20px;
        }
        #username-input {
            padding: 10px 15px;
            margin: 10px;
            width: 300px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        #login-button {
            padding: 10px 20px;
            background: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <!-- Форма входа -->
    <div class="login-form" id="login-form">
        <h2>Вход в чат</h2>
        <input type="text" id="username-input" placeholder="Введите ваше имя" required>
        <button id="login-button">Войти</button>
    </div>

    <!-- Интерфейс чата -->
    <div class="chat-container" id="chat-container" style="display: none;">
        <div class="chat-header">
            <h2>Чат</h2>
            <div>Вы: <span id="current-user"></span></div>
        </div>
        <div id="chat-messages"></div>
        <div class="chat-input">
            <input type="text" id="message-input" placeholder="Введите сообщение..." autocomplete="off">
            <button id="send-button">Отправить</button>
        </div>
    </div>

    <script>
        // Элементы DOM
        const loginForm = document.getElementById('login-form');
        const usernameInput = document.getElementById('username-input');
        const loginButton = document.getElementById('login-button');
        const chatContainer = document.getElementById('chat-container');
        const currentUserSpan = document.getElementById('current-user');
        const chatMessages = document.getElementById('chat-messages');
        const messageInput = document.getElementById('message-input');
        const sendButton = document.getElementById('send-button');
// Переменные
        let currentUser = '';
        const CHAT_KEY = 'github_chat_messages';

        // Инициализация
        function init() {
            // Проверяем, есть ли сохраненное имя пользователя
            const savedUser = localStorage.getItem('chat_username');
            if (savedUser) {
                currentUser = savedUser;
                showChat();
            }
            
            loadMessages();
        }

        // Показать чат
        function showChat() {
            loginForm.style.display = 'none';
            chatContainer.style.display = 'block';
            currentUserSpan.textContent = currentUser;
            messageInput.focus();
        }

        // Загрузка сообщений
        function loadMessages() {
            const messages = JSON.parse(localStorage.getItem(CHAT_KEY)) || [];
            messages.forEach(msg => {
                addMessage(msg.text, msg.sender, msg.time, false);
            });
            scrollToBottom();
        }

        // Сохранение сообщения
        function saveMessage(text, sender, time) {
            const messages = JSON.parse(localStorage.getItem(CHAT_KEY)) || [];
            messages.push({ text, sender, time });
            localStorage.setItem(CHAT_KEY, JSON.stringify(messages));
        }

        // Добавление сообщения в чат
        function addMessage(text, sender, time, save = true) {
            const isCurrentUser = sender === currentUser;
            const messageDiv = document.createElement('div');
            messageDiv.className = message ${isCurrentUser ? 'sent' : 'received'};
            
            messageDiv.innerHTML = 
                <div>${text}</div>
                <div class="message-info">
                    ${isCurrentUser ? 'Вы' : sender} • ${time}
                </div>
            ;
            
            chatMessages.appendChild(messageDiv);
            
            if (save) {
                saveMessage(text, sender, time);
            }
            
            scrollToBottom();
        }

        // Отправка сообщения
        function sendMessage() {
            const text = messageInput.value.trim();
            if (text) {
                const time = new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
                addMessage(text, currentUser, time);
                messageInput.value = '';
                
                // Имитация ответа
                setTimeout(() => {
                    const replies = [
                        "Привет! Как дела?",
                        "Интересное сообщение!",
                        "Я бот этого чата",
                        "Продолжайте общение!",
                        "Сообщения сохраняются в вашем браузере"
                    ];
                    const reply = replies[Math.floor(Math.random() * replies.length)];
                    addMessage(reply, "Чат-бот", new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}));
                }, 1000);
            }
        }

        // Прокрутка вниз
        function scrollToBottom() {
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Обработчики событий
        loginButton.addEventListener('click', () => {
            const username = usernameInput.value.trim();
            if (username) {
                currentUser = username;
                localStorage.setItem('chat_username', username);
                showChat();
            }
        });

        sendButton.addEventListener('click', sendMessage);
        messageInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') sendMessage();
        });

        // Инициализация при загрузке
        window.addEventListener('DOMContentLoaded', init);
    </script>
</body>
</html>
